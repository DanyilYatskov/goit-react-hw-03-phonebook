{"version":3,"sources":["components/ContactList/contactListItem.module.scss","components/Form/Input/input.module.scss","components/Section/section.module.scss","components/Filter/filter.module.scss","components/Form/Button/button.module.scss","components/Form/form.module.scss","components/ContactList/contactList.module.scss","components/Notification/notification.module.scss","components/Form/Input/Input.js","components/Form/Button/Button.js","components/Form/Form.js","components/Section/Section.js","components/ContactList/ContactListItem.js","components/ContactList/ContactsList.js","components/Notification/Notification.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Input","inputId","handleChange","inputName","value","pattern","title","type","className","styles","label","htmlFor","input","name","required","id","onChange","Button","button","Form","state","props","number","nameInputId","uuidv4","numberInputId","event","target","setState","toLowerCase","handleSubmit","preventDefault","onSubmit","this","form","Component","defaultProps","Section","children","section","ContactListItem","contactName","contactNumber","contactId","onDeleteHandler","item","text","onClick","ContactList","contacts","onDeleteContact","list","map","contact","Notification","message","Filter","App","filter","onChangeFilter","getFilteredContacts","normalizedFilter","includes","addContact","newContact","undefined","find","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","deleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","updatedContacts","setItem","stringify","filteredContacts","length","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9efbc364.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"contactListItem_button__2ra6A\",\"text\":\"contactListItem_text__3SulL\",\"item\":\"contactListItem_item__3Kaq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"input_label__3-3x5\",\"input\":\"input_input__3g7yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1Q-HJ\",\"title\":\"section_title__2cU7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__1_GLC\",\"input\":\"filter_input__US50-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__14AZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__279es\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__8CLur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"notification_text__BEjfS\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './input.module.scss';\r\n\r\nconst Input = ({\r\n  inputId,\r\n  handleChange,\r\n  inputName,\r\n  value,\r\n  pattern,\r\n  title,\r\n  type,\r\n}) => {\r\n  return (\r\n    <label className={styles.label} htmlFor={inputId}>\r\n      {inputName}\r\n      <input\r\n        className={styles.input}\r\n        type={type}\r\n        name={inputName}\r\n        pattern={pattern}\r\n        title={title}\r\n        required\r\n        value={value}\r\n        id={inputId}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  inputName: PropTypes.string.isRequired,\r\n  inputId: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './button.module.scss';\r\n\r\nconst Button = ({ name, type  }) => {\r\n  return (\r\n    <button className={styles.button} type={type}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n//import PropTypes from 'prop-types';\r\nimport Input from './Input/';\r\nimport Button from './Button/';\r\n//import Section from '../Section';\r\nimport styles from './form.module.scss';\r\n\r\nclass Form extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  state = {\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name.toLowerCase()]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <Input\r\n          inputName=\"Name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          inputId={this.nameInputId}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <Input\r\n          inputName=\"Number\"\r\n          type=\"tel\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          value={number}\r\n          inputId={this.numberInputId}\r\n          handleChange={this.handleChange}\r\n        />\r\n\r\n        <Button name=\"Add Contact\" type=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './section.module.scss';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styles from './contactListItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({\r\n  contactName,\r\n  contactNumber,\r\n  contactId,\r\n  onDeleteHandler,\r\n}) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.text}>\r\n        {contactName} : {contactNumber}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => onDeleteHandler(contactId)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contactName: PropTypes.string.isRequired,\r\n  contactNumber: PropTypes.string.isRequired,\r\n  contactId: PropTypes.string.isRequired,\r\n  onDeleteHandler: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\nimport styles from './contactList.module.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contactName={contact.name}\r\n          contactNumber={contact.number}\r\n          contactId={contact.id}\r\n          onDeleteHandler={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './notification.module.scss';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.text}>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.scss';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className={styles.input}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// import { alert } from '@pnotify/core';\n// import '@pnotify/core/dist/PNotify.css';\n// import '@pnotify/core/dist/BrightTheme.css';\n// import '@pnotify/confirm/dist/PNotifyConfirm.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './components/Form';\nimport Section from './components/Section/';\nimport ContactsList from './components/ContactList/';\nimport Notification from './components/Notification/';\nimport Filter from './components/Filter/';\n\nclass App extends Component {\n  // static defaultProps = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  // };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  onChangeFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    const contactExists = this.state.contacts.find(\n      contact => contact.name === newContact.name,\n    );\n\n    if (contactExists !== undefined) {\n      // alert({\n      //   title: 'Oops',\n      //   text: `${newContact.name} is already in contacts`,\n      // });\n      const notify = () =>\n        toast.error(`${newContact.name} is already in contacts`, {\n          position: 'top-center',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      notify();\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (contacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const updatedContacts = this.state.contacts;\n    const previousContacts = prevState.contacts;\n    if (updatedContacts !== previousContacts) {\n      localStorage.setItem('contacts', JSON.stringify(updatedContacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className=\"App\">\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.addContact} />\n        </Section>\n        {contacts.length > 0 ? (\n          <Section title=\"Contacts\">\n            <Filter value={filter} onChange={this.onChangeFilter} />\n            <ContactsList\n              contacts={filteredContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"Contacts are missing\" />\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}